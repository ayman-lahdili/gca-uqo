"""Initial migration

Revision ID: e1b48089fa6a
Revises: 
Create Date: 2025-05-30 15:58:41.417323

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel.sql.sqltypes


# revision identifiers, used by Alembic.
revision: str = 'e1b48089fa6a'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('campagne',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('trimestre', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('en_cours', 'cloturee', 'annulee', name='campagnestatus'), nullable=False),
    sa.Column('config', sa.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_campagne_trimestre'), 'campagne', ['trimestre'], unique=False)
    op.create_table('etudiant',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('code_permanent', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('nom', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('prenom', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('cycle', sa.Integer(), nullable=False),
    sa.Column('campus', sa.Enum('gat', 'stj', 'non_specifie', name='campus'), nullable=False),
    sa.Column('programme', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('trimestre', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_etudiant_code_permanent'), 'etudiant', ['code_permanent'], unique=False)
    op.create_table('candidature',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('id_etudiant', sa.Integer(), nullable=False),
    sa.Column('note', sa.Enum('A_p', 'A', 'A_m', 'B_p', 'B', 'B_m', 'non_specifie', name='note'), nullable=False),
    sa.Column('sigle', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('titre', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('trimestre', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id_etudiant'], ['etudiant.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('cours',
    sa.Column('sigle', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('trimestre', sa.Integer(), nullable=False),
    sa.Column('titre', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('status', sa.Enum('confirmee', 'non_confirmee', name='coursstatus'), nullable=False),
    sa.Column('cycle', sa.Integer(), nullable=False),
    sa.Column('change', sa.JSON(), nullable=True),
    sa.Column('id_campagne', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['id_campagne'], ['campagne.id'], ),
    sa.PrimaryKeyConstraint('sigle', 'trimestre')
    )
    op.create_index(op.f('ix_cours_sigle'), 'cours', ['sigle'], unique=False)
    op.create_index(op.f('ix_cours_trimestre'), 'cours', ['trimestre'], unique=False)
    op.create_table('seance',
    sa.Column('campus', sa.JSON(), nullable=True),
    sa.Column('ressource', sa.JSON(), nullable=True),
    sa.Column('change', sa.JSON(), nullable=True),
    sa.Column('trimestre', sa.Integer(), nullable=False),
    sa.Column('sigle', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('groupe', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.ForeignKeyConstraint(['trimestre', 'sigle'], ['cours.trimestre', 'cours.sigle'], ),
    sa.PrimaryKeyConstraint('trimestre', 'sigle', 'groupe')
    )
    op.create_table('activite',
    sa.Column('trimestre', sa.Integer(), nullable=False),
    sa.Column('sigle', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('groupe', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('type', sa.Enum('TD', 'TP', 'COURS', name='activitetype'), nullable=False),
    sa.Column('mode', sa.Enum('PRESENTIEL', 'DISTANCIEL', name='activitemode'), nullable=False),
    sa.Column('status', sa.Enum('confirmee', 'non_confirmee', name='activitestatus'), nullable=False),
    sa.Column('jour', sa.Integer(), nullable=False),
    sa.Column('hr_debut', sa.Integer(), nullable=False),
    sa.Column('hr_fin', sa.Integer(), nullable=False),
    sa.Column('date_debut', sa.DateTime(), nullable=False),
    sa.Column('date_fin', sa.DateTime(), nullable=False),
    sa.Column('nombre_seance', sa.Integer(), nullable=False),
    sa.Column('change', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['trimestre', 'sigle', 'groupe'], ['seance.trimestre', 'seance.sigle', 'seance.groupe'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('activitecandidature',
    sa.Column('id_activite', sa.Integer(), nullable=False),
    sa.Column('id_candidature', sa.Integer(), nullable=False),
    sa.Column('note', sa.Enum('A_p', 'A', 'A_m', 'B_p', 'B', 'B_m', 'non_specifie', name='note'), nullable=False),
    sa.ForeignKeyConstraint(['id_activite'], ['activite.id'], ),
    sa.ForeignKeyConstraint(['id_candidature'], ['candidature.id'], ),
    sa.PrimaryKeyConstraint('id_activite', 'id_candidature')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('activitecandidature')
    op.drop_table('activite')
    op.drop_table('seance')
    op.drop_index(op.f('ix_cours_trimestre'), table_name='cours')
    op.drop_index(op.f('ix_cours_sigle'), table_name='cours')
    op.drop_table('cours')
    op.drop_table('candidature')
    op.drop_index(op.f('ix_etudiant_code_permanent'), table_name='etudiant')
    op.drop_table('etudiant')
    op.drop_index(op.f('ix_campagne_trimestre'), table_name='campagne')
    op.drop_table('campagne')
    # ### end Alembic commands ###
